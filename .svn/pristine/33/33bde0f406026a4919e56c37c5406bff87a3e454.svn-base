<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Stage: D:/developpement/php/www/Stage/trunk/class/Enumeration.class.php Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.1-p1 -->
<div class="tabs">
  <ul>
    <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.html"><span>Namespaces</span></a></li>
    <li><a href="annotated.html"><span>Classes</span></a></li>
    <li id="current"><a href="files.html"><span>Files</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
  </ul></div>
<h1>D:/developpement/php/www/Stage/trunk/class/Enumeration.class.php</h1><a href="_enumeration_8class_8php.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 &lt;?php
<a name="l00002"></a>00002 set_include_path(<span class="stringliteral">"."</span>.PATH_SEPARATOR.<span class="stringliteral">".."</span>);
<a name="l00003"></a>00003 <span class="keywordflow">if</span>(!isset($ROOT_PATH))
<a name="l00004"></a>00004 require_once(<span class="stringliteral">"inc/main.inc.php"</span>);
<a name="l00005"></a>00005 <span class="comment">//require_once("class/ISelectable.class.php");</span>
<a name="l00006"></a>00006 
<a name="l00007"></a>00007 
<a name="l00008"></a>00008 <span class="comment">// Classe permettant notamment de convertir un array en tableau de ISelectable</span>
<a name="l00009"></a><a class="code" href="class_enumeration.html">00009</a> <span class="keyword">class </span><a class="code" href="class_enumeration.html">Enumeration</a>{
<a name="l00010"></a><a class="code" href="class_enumeration.html#1df8ad6db312c15001bf428f5508cd47">00010</a>     <span class="keyword">public</span> <span class="keyword">static</span> function <a class="code" href="class_enumeration.html#1df8ad6db312c15001bf428f5508cd47">getSelectablesArray</a>($normalArray, $elemIsValue=<span class="keyword">false</span>){
<a name="l00011"></a>00011         $selectablesArray = array();
<a name="l00012"></a>00012         foreach($normalArray as $key =&gt; $elem)
<a name="l00013"></a>00013             $selectablesArray[count($selectablesArray)] = <span class="keyword">new</span> <a class="code" href="class_enumerable.html">Enumerable</a>((($elemIsValue)?$elem:$key), $elem);
<a name="l00014"></a>00014         <span class="keywordflow">return</span> $selectablesArray;
<a name="l00015"></a>00015     }
<a name="l00016"></a>00016     
<a name="l00017"></a>00017     <span class="comment">// Fonction "complexe" permettant de trier un tableau d'objets en fonction d'une EXPRESSION PHP à évaluer...</span>
<a name="l00018"></a>00018     <span class="comment">// Sachant que chaque object du tableau $objectArray sera représenté par la variable $a dans $evaluationCodeForOrderBy</span>
<a name="l00019"></a>00019     <span class="comment">// PAR EXEMPLE, soit la classe étudiant liée avec une classe Adresse, et sur laquelle on voudra faire un tri sur le nom, prénom et code postal :</span>
<a name="l00020"></a>00020     <span class="comment">// Enumeration::sort($TableauEtudiants, '$a-&gt;getNom()." ".$a-&gt;getPrenom()." (".$a-&gt;getAdresse()-&gt;getCodePostal().")"')</span>
<a name="l00021"></a><a class="code" href="class_enumeration.html#31dd2e15f6429c7a960371d303f172e6">00021</a>     <span class="keyword">public</span> <span class="keyword">static</span> function <a class="code" href="class_enumeration.html#31dd2e15f6429c7a960371d303f172e6">sort</a>($objectArray, $evaluationCodeForOrderBy){
<a name="l00022"></a>00022         $sortedArray = array();
<a name="l00023"></a>00023         $assocArray = array();
<a name="l00024"></a>00024         foreach($objectArray as $key =&gt; $a){
<a name="l00025"></a>00025             $orderByValue=<span class="stringliteral">""</span>;
<a name="l00026"></a>00026             eval('$orderByValue = '.$evaluationCodeForOrderBy.<span class="charliteral">';'</span>);
<a name="l00027"></a>00027             <span class="keywordflow">if</span>(!isset($assocArray[$orderByValue])){
<a name="l00028"></a>00028                 $sortedArray[count($sortedArray)] = $orderByValue;
<a name="l00029"></a>00029                 $assocArray[$orderByValue] = array();
<a name="l00030"></a>00030             }
<a name="l00031"></a>00031             $assocArray[$orderByValue][count($assocArray[$orderByValue])] = $a;
<a name="l00032"></a>00032         }
<a name="l00033"></a>00033         
<a name="l00034"></a>00034         <a class="code" href="class_enumeration.html#31dd2e15f6429c7a960371d303f172e6">sort</a>($sortedArray);
<a name="l00035"></a>00035         
<a name="l00036"></a>00036         $returnedArray = array();
<a name="l00037"></a>00037         foreach($sortedArray as $a)
<a name="l00038"></a>00038             foreach($assocArray[$a] as $b)
<a name="l00039"></a>00039                 $returnedArray[count($returnedArray)] = $b;
<a name="l00040"></a>00040         
<a name="l00041"></a>00041         <span class="keywordflow">return</span> $returnedArray;
<a name="l00042"></a>00042     }
<a name="l00043"></a>00043     
<a name="l00044"></a>00044     <span class="comment">/* Permet de créer un array de ISelectable avec $key =&gt; $value pour chaque élément en spécifiant une EXPRESSION PHP à évaluer pour la création du $key et du $value</span>
<a name="l00045"></a>00045 <span class="comment">    // Regarder la fonction sort pour voir comment utiliser les eval (le fonctionnement est strictement le meme !)</span>
<a name="l00046"></a>00046 <span class="comment">        public static function getSelectablesArrayFromObject($normalArray, $keyEval, $elemEval){</span>
<a name="l00047"></a>00047 <span class="comment">        $selectablesArray = array();</span>
<a name="l00048"></a>00048 <span class="comment">        foreach($normalArray as $a){</span>
<a name="l00049"></a>00049 <span class="comment">                $key = "";</span>
<a name="l00050"></a>00050 <span class="comment">                $elem = "";</span>
<a name="l00051"></a>00051 <span class="comment">                eval('$key = '.$keyEval.';');</span>
<a name="l00052"></a>00052 <span class="comment">                eval('$elem = '.$elemEval.';');</span>
<a name="l00053"></a>00053 <span class="comment">            $selectablesArray[count($selectablesArray)] = new Enumerable($key, $elem);</span>
<a name="l00054"></a>00054 <span class="comment">        }</span>
<a name="l00055"></a>00055 <span class="comment">        return $selectablesArray;</span>
<a name="l00056"></a>00056 <span class="comment">        }*/</span>
<a name="l00057"></a>00057     
<a name="l00058"></a>00058     <span class="comment">// Permet de créer un array TRIE avec $key =&gt; $value pour chaque élément en spécifiant une EXPRESSION PHP à évaluer pour la création du $key et du $value</span>
<a name="l00059"></a>00059     <span class="comment">// Regarder la fonction sort pour voir comment utiliser les eval (le fonctionnement est strictement le meme !)</span>
<a name="l00060"></a><a class="code" href="class_enumeration.html#48c2cc09ab821fe9aee39174a62b0be2">00060</a>         <span class="keyword">public</span> <span class="keyword">static</span> function <a class="code" href="class_enumeration.html#48c2cc09ab821fe9aee39174a62b0be2">getSelectablesArrayFromObject</a>($normalArray, $keyEval, $elemAndSortEval, $differentSortEval=<span class="stringliteral">""</span>, $isSorted=<span class="keyword">true</span>){
<a name="l00061"></a>00061                 <span class="keywordflow">if</span> ($isSorted)
<a name="l00062"></a>00062                 $normalArray = <a class="code" href="class_enumeration.html#31dd2e15f6429c7a960371d303f172e6">Enumeration::sort</a>($normalArray,$differentSortEval!=<span class="stringliteral">""</span>?$differentSortEval:$elemAndSortEval);
<a name="l00063"></a>00063         $selectablesArray = array();
<a name="l00064"></a>00064         foreach($normalArray as $a){
<a name="l00065"></a>00065                 $key = <span class="stringliteral">""</span>;
<a name="l00066"></a>00066                 $elem = <span class="stringliteral">""</span>;
<a name="l00067"></a>00067                 eval('$key = '.$keyEval.<span class="charliteral">';'</span>);
<a name="l00068"></a>00068                 eval('$elem = '.$elemAndSortEval.<span class="charliteral">';'</span>);
<a name="l00069"></a>00069             $selectablesArray[count($selectablesArray)] = <span class="keyword">new</span> <a class="code" href="class_enumerable.html">Enumerable</a>($key, $elem);
<a name="l00070"></a>00070         }
<a name="l00071"></a>00071         <span class="keywordflow">return</span> $selectablesArray;
<a name="l00072"></a>00072     }
<a name="l00073"></a>00073     
<a name="l00074"></a>00074 }
<a name="l00075"></a>00075 
<a name="l00076"></a><a class="code" href="class_enumerable.html">00076</a> <span class="keyword">class </span><a class="code" href="class_enumerable.html">Enumerable</a> <span class="keyword">implements</span> <a class="code" href="interface_i_selectable.html">ISelectable</a>{
<a name="l00077"></a><a class="code" href="class_enumerable.html#ea1f51f95258aee10924a82f095cdf30">00077</a>     <span class="keyword">private</span> <a class="code" href="class_enumerable.html#ea1f51f95258aee10924a82f095cdf30">$_optionValue</a>;
<a name="l00078"></a><a class="code" href="class_enumerable.html#aa4663daad54798558034515144009eb">00078</a>     <span class="keyword">private</span> <a class="code" href="class_enumerable.html#aa4663daad54798558034515144009eb">$_optionLabel</a>;
<a name="l00079"></a>00079     
<a name="l00080"></a><a class="code" href="class_enumerable.html#f09496a7227849682651457e05f22723">00080</a>     <span class="keyword">public</span> function <a class="code" href="class_enumerable.html#f09496a7227849682651457e05f22723">__construct</a>($optionValue, $optionLabel){
<a name="l00081"></a>00081         $this-&gt;_optionValue = $optionValue;
<a name="l00082"></a>00082         $this-&gt;_optionLabel = $optionLabel;
<a name="l00083"></a>00083     }
<a name="l00084"></a>00084     
<a name="l00085"></a><a class="code" href="class_enumerable.html#f81e3464794011693224aab4bced0c78">00085</a>     <span class="keyword">public</span> function <a class="code" href="class_enumerable.html#f81e3464794011693224aab4bced0c78">getFormSelectOptionLabel</a>(){
<a name="l00086"></a>00086         <span class="keywordflow">return</span> $this-&gt;_optionLabel;
<a name="l00087"></a>00087     }
<a name="l00088"></a>00088     
<a name="l00089"></a><a class="code" href="class_enumerable.html#ec9196ec90c371b35da513d4c51e347f">00089</a>     <span class="keyword">public</span> function <a class="code" href="class_enumerable.html#ec9196ec90c371b35da513d4c51e347f">getFormSelectOptionValue</a>(){
<a name="l00090"></a>00090         <span class="keywordflow">return</span> $this-&gt;_optionValue;
<a name="l00091"></a>00091     }
<a name="l00092"></a>00092 }
<a name="l00093"></a>00093 ?&gt;
</pre></div><hr size="1"><address style="align: right;"><small>Generated on Wed Mar 28 11:48:05 2007 for Stage by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.1-p1 </small></address>
</body>
</html>
